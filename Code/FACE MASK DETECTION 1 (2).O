{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"FACE MASK DETECTION 1.O","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPtntDXP1Np//UxwGPRfWQu"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"vR3l6f1U3Vvy"},"source":["import os\n","import numpy as np\n","import random\n","from tensorflow.keras.layers import Dense,Dropout,Conv2D,MaxPooling2D,Flatten\n","from tensorflow.keras.models import Sequential\n","import cv2\n","import matplotlib.pyplot as plt"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"oI_21Kb63fUW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625725809398,"user_tz":-330,"elapsed":3250,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"f0543305-6402-4313-b3af-47dea176b1d2"},"source":["pip install tensorflow"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: tensorflow in /usr/local/lib/python3.7/dist-packages (2.5.0)\n","Requirement already satisfied: h5py~=3.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.1.0)\n","Requirement already satisfied: termcolor~=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.1.0)\n","Requirement already satisfied: absl-py~=0.10 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.12.0)\n","Requirement already satisfied: opt-einsum~=3.3.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.3.0)\n","Requirement already satisfied: protobuf>=3.9.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.12.4)\n","Requirement already satisfied: wrapt~=1.12.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.12.1)\n","Requirement already satisfied: keras-preprocessing~=1.1.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.1.2)\n","Requirement already satisfied: wheel~=0.35 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.36.2)\n","Requirement already satisfied: tensorboard~=2.5 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (2.5.0)\n","Requirement already satisfied: gast==0.4.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.4.0)\n","Requirement already satisfied: six~=1.15.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.15.0)\n","Requirement already satisfied: tensorflow-estimator<2.6.0,>=2.5.0rc0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (2.5.0)\n","Requirement already satisfied: keras-nightly~=2.5.0.dev in /usr/local/lib/python3.7/dist-packages (from tensorflow) (2.5.0.dev2021032900)\n","Requirement already satisfied: flatbuffers~=1.12.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.12)\n","Requirement already satisfied: astunparse~=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.6.3)\n","Requirement already satisfied: grpcio~=1.34.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.34.1)\n","Requirement already satisfied: numpy~=1.19.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.19.5)\n","Requirement already satisfied: typing-extensions~=3.7.4 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.7.4.3)\n","Requirement already satisfied: google-pasta~=0.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.2.0)\n","Requirement already satisfied: cached-property; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from h5py~=3.1.0->tensorflow) (1.5.2)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from protobuf>=3.9.2->tensorflow) (57.0.0)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow) (3.3.4)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow) (0.4.4)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow) (0.6.1)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow) (1.8.0)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow) (2.23.0)\n","Requirement already satisfied: google-auth<2,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow) (1.31.0)\n","Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.5->tensorflow) (1.0.1)\n","Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tensorboard~=2.5->tensorflow) (4.5.0)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.5->tensorflow) (1.3.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.5->tensorflow) (2021.5.30)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.5->tensorflow) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.5->tensorflow) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.5->tensorflow) (3.0.4)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.5->tensorflow) (0.2.8)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.5->tensorflow) (4.2.2)\n","Requirement already satisfied: rsa<5,>=3.1.4; python_version >= \"3.6\" in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.5->tensorflow) (4.7.2)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->markdown>=2.6.8->tensorboard~=2.5->tensorflow) (3.4.1)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.5->tensorflow) (3.1.1)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<2,>=1.6.3->tensorboard~=2.5->tensorflow) (0.4.8)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XLs1jg0E3ima","executionInfo":{"status":"ok","timestamp":1625731501527,"user_tz":-330,"elapsed":592,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"0c5ce88d-3382-4fb4-cd28-b66e785b4242"},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9E96K4V-3mkT","executionInfo":{"status":"ok","timestamp":1625725910185,"user_tz":-330,"elapsed":48754,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"aa6ffbc8-9fe8-4a99-ed42-f6eb0cd4f140"},"source":["path='/content/drive/My Drive/Dataset/with_mask'\n","files=[]\n","for r,d,f in os.walk(path):\n","  for file in f:\n","    files.append(os.path.join(r, file))\n","\n","path='/content/drive/My Drive/Dataset/without_mask'\n","for r,d,f in os.walk(path):\n","  for file in f:\n","    files.append(os.path.join(r, file))\n","\n","print(len(files))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["11042\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"31w2XVZE3zq1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625728363940,"user_tz":-330,"elapsed":2453758,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"afe1c2b0-e86c-47dc-b80e-c8931bb64483"},"source":["y=[1]*5521+[0]*5521\n","x=[]\n","for i in range(len(files)):\n","  img=cv2.imread(files[i])\n","  res=cv2.resize(img,dsize=(64,64),interpolation=cv2.INTER_CUBIC)\n","  image=np.array(res)/255\n","  x.append([image,y[i]])\n","x=np.array(x)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  \n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"kMsnP7hP4CQp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625728364512,"user_tz":-330,"elapsed":592,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"ab187f0a-d22f-4d52-d106-f7e252738b22"},"source":["np.random.shuffle(x)\n","np.random.shuffle(x)\n","x,y=np.array(list(map(lambda x: x[0],x))),np.array(list(map(lambda x: x[1],x)))\n","x.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(11042, 64, 64, 3)"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"jFyoqLkQ4KLv"},"source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"q2J2Q4tWGNbX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625728365138,"user_tz":-330,"elapsed":12,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"dbd1dad4-6991-41cf-fba6-120d40369028"},"source":["x_train.shape,x_test.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((7729, 64, 64, 3), (3313, 64, 64, 3))"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"mDzM6oK8GV4N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625728365138,"user_tz":-330,"elapsed":9,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"fd5d5138-5ba1-4f4e-c9af-09a4c11ddc11"},"source":["y_train.shape,y_test.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((7729,), (3313,))"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"UGY9jT3-GbIp","colab":{"base_uri":"https://localhost:8080/","height":285},"executionInfo":{"status":"ok","timestamp":1625728365681,"user_tz":-330,"elapsed":550,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"68bebad5-1bd8-4c3f-a9a4-35766733d33f"},"source":["index=np.random.randint(11042)\n","plt.imshow(x[index])\n","y[index]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{"tags":[]},"execution_count":10},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"fs0b3_JGGelp"},"source":["\n","model = Sequential()\n","model.add(Conv2D(32,(3,3),activation='relu',input_shape=(64,64,3)))\n","model.add(MaxPooling2D())\n","model.add(Conv2D(64, (3, 3), activation='relu'))\n","model.add(MaxPooling2D())\n","model.add(Dropout(0.2))\n","model.add(Flatten())\n","model.add(Dense(15000,activation='relu'))\n","model.add(Dropout(0.2))\n","model.add(Dense(7000,activation='relu'))\n","model.add(Dense(2000,activation='relu'))\n","model.add(Dense(300,activation='relu'))\n","\n","model.add(Dense(1,activation='sigmoid'))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qpvhONaAGkYN"},"source":["model.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bdNTuE1wGqme"},"source":["from tensorflow.keras.callbacks import TensorBoard\n","import time\n","tb=TensorBoard(log_dir='logs/new4')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qJW_2OBIGtuw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625728515070,"user_tz":-330,"elapsed":142986,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"0bbb6839-202a-4990-ff86-2044bb295e40"},"source":["his=model.fit(x_train,y_train,validation_data=(x_test,y_test),epochs=5,callbacks=[tb])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/5\n","242/242 [==============================] - 52s 85ms/step - loss: 0.3719 - accuracy: 0.8934 - val_loss: 0.1403 - val_accuracy: 0.9565\n","Epoch 2/5\n","242/242 [==============================] - 19s 80ms/step - loss: 0.1362 - accuracy: 0.9577 - val_loss: 0.1266 - val_accuracy: 0.9608\n","Epoch 3/5\n","242/242 [==============================] - 19s 78ms/step - loss: 0.1099 - accuracy: 0.9642 - val_loss: 0.0746 - val_accuracy: 0.9740\n","Epoch 4/5\n","242/242 [==============================] - 19s 78ms/step - loss: 0.1047 - accuracy: 0.9657 - val_loss: 0.1419 - val_accuracy: 0.9611\n","Epoch 5/5\n","242/242 [==============================] - 19s 78ms/step - loss: 0.0884 - accuracy: 0.9718 - val_loss: 0.1003 - val_accuracy: 0.9680\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"hNPtdIPkGxXf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625728516532,"user_tz":-330,"elapsed":1475,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"b47d030b-da8c-4263-a9c4-3245257c79eb"},"source":["model.evaluate(x_test,y_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["104/104 [==============================] - 1s 9ms/step - loss: 0.1003 - accuracy: 0.9680\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["[0.10034842789173126, 0.9680048227310181]"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"RgsVmFmyVT6c","colab":{"base_uri":"https://localhost:8080/","height":302},"executionInfo":{"status":"ok","timestamp":1625728516533,"user_tz":-330,"elapsed":11,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"be4a8c48-8830-49be-965b-cd948aa0bfe5"},"source":["index=random.randrange(9211,11042)\n","plt.imshow(x[index].reshape(64,64,3))\n","res=model.predict(np.array([x[index]]))\n","if res[0][0]>0.5:\n","  print('with_mask')\n","else:\n","  print('without_mask')\n","res[0][0]"],"execution_count":null,"outputs":[{"output_type":"stream","text":["with_mask\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["0.99131596"]},"metadata":{"tags":[]},"execution_count":16},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"oiTBcmBFVi-I","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625728516534,"user_tz":-330,"elapsed":8,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"8ca2d112-e956-4613-c8b8-e9cfd2e0f001"},"source":["model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d (Conv2D)              (None, 62, 62, 32)        896       \n","_________________________________________________________________\n","max_pooling2d (MaxPooling2D) (None, 31, 31, 32)        0         \n","_________________________________________________________________\n","conv2d_1 (Conv2D)            (None, 29, 29, 64)        18496     \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 14, 14, 64)        0         \n","_________________________________________________________________\n","dropout (Dropout)            (None, 14, 14, 64)        0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 12544)             0         \n","_________________________________________________________________\n","dense (Dense)                (None, 15000)             188175000 \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 15000)             0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 7000)              105007000 \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 2000)              14002000  \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 300)               600300    \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 1)                 301       \n","=================================================================\n","Total params: 307,803,993\n","Trainable params: 307,803,993\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lpsRdXAW0NMW"},"source":["model.save('Face_Mask_Prediction_1.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZT0Cdi1ycMTb"},"source":["model_json=model.to_json()\n","with open(\"model.json\",\"w\") as file:\n","  file.write(model_json)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"86-IR3tzL6H4"},"source":["model.save_weights(\"weights1.h5\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7s06GkOR_miU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625728793086,"user_tz":-330,"elapsed":119349,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"d7012d94-3864-47ee-daab-cdddc50e212d"},"source":["from keras.models import load_model\n","\n","new_model=load_model('Face_Mask_Prediction_1.h5')\n","new_model.evaluate(x_test,y_test,verbose=2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["104/104 - 13s - loss: 0.1003 - accuracy: 0.9680\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["[0.10034842789173126, 0.9680048227310181]"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"prGCFeaj0rKM","executionInfo":{"status":"ok","timestamp":1625728826180,"user_tz":-330,"elapsed":380,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"f79cb0e1-92a1-43e3-b43d-1f16e2ebace4"},"source":["import cv2\n","import numpy as np\n","import matplotlib.pyplot as plt\n","img = cv2.imread('/content/drive/MyDrive/Dataset/without_mask/1.jpg')\n","img = cv2.resize(img, (64,64))\n","img = np.reshape(img, (1,64,64,3))\n","print(img.shape)\n","print(new_model.predict(img))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(1, 64, 64, 3)\n","[[0.]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kOT6PmwZ0yjh","executionInfo":{"status":"ok","timestamp":1625728835721,"user_tz":-330,"elapsed":5563,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"76e46897-76ba-4251-a7b0-1456d7f83ad3"},"source":["!pip install mtcnn"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting mtcnn\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/67/43/abee91792797c609c1bf30f1112117f7a87a713ebaa6ec5201d5555a73ef/mtcnn-0.1.0-py3-none-any.whl (2.3MB)\n","\r\u001b[K     |▏                               | 10kB 24.0MB/s eta 0:00:01\r\u001b[K     |▎                               | 20kB 28.6MB/s eta 0:00:01\r\u001b[K     |▍                               | 30kB 32.8MB/s eta 0:00:01\r\u001b[K     |▋                               | 40kB 34.8MB/s eta 0:00:01\r\u001b[K     |▊                               | 51kB 33.9MB/s eta 0:00:01\r\u001b[K     |▉                               | 61kB 29.1MB/s eta 0:00:01\r\u001b[K     |█                               | 71kB 30.4MB/s eta 0:00:01\r\u001b[K     |█▏                              | 81kB 27.8MB/s eta 0:00:01\r\u001b[K     |█▎                              | 92kB 28.9MB/s eta 0:00:01\r\u001b[K     |█▌                              | 102kB 30.5MB/s eta 0:00:01\r\u001b[K     |█▋                              | 112kB 30.5MB/s eta 0:00:01\r\u001b[K     |█▊                              | 122kB 30.5MB/s eta 0:00:01\r\u001b[K     |█▉                              | 133kB 30.5MB/s eta 0:00:01\r\u001b[K     |██                              | 143kB 30.5MB/s eta 0:00:01\r\u001b[K     |██▏                             | 153kB 30.5MB/s eta 0:00:01\r\u001b[K     |██▎                             | 163kB 30.5MB/s eta 0:00:01\r\u001b[K     |██▌                             | 174kB 30.5MB/s eta 0:00:01\r\u001b[K     |██▋                             | 184kB 30.5MB/s eta 0:00:01\r\u001b[K     |██▊                             | 194kB 30.5MB/s eta 0:00:01\r\u001b[K     |███                             | 204kB 30.5MB/s eta 0:00:01\r\u001b[K     |███                             | 215kB 30.5MB/s eta 0:00:01\r\u001b[K     |███▏                            | 225kB 30.5MB/s eta 0:00:01\r\u001b[K     |███▍                            | 235kB 30.5MB/s eta 0:00:01\r\u001b[K     |███▌                            | 245kB 30.5MB/s eta 0:00:01\r\u001b[K     |███▋                            | 256kB 30.5MB/s eta 0:00:01\r\u001b[K     |███▊                            | 266kB 30.5MB/s eta 0:00:01\r\u001b[K     |████                            | 276kB 30.5MB/s eta 0:00:01\r\u001b[K     |████                            | 286kB 30.5MB/s eta 0:00:01\r\u001b[K     |████▏                           | 296kB 30.5MB/s eta 0:00:01\r\u001b[K     |████▍                           | 307kB 30.5MB/s eta 0:00:01\r\u001b[K     |████▌                           | 317kB 30.5MB/s eta 0:00:01\r\u001b[K     |████▋                           | 327kB 30.5MB/s eta 0:00:01\r\u001b[K     |████▉                           | 337kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████                           | 348kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████                           | 358kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████▏                          | 368kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████▍                          | 378kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████▌                          | 389kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████▋                          | 399kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████▉                          | 409kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████                          | 419kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████                          | 430kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████▎                         | 440kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████▍                         | 450kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████▌                         | 460kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████▊                         | 471kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████▉                         | 481kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████                         | 491kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████                         | 501kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████▎                        | 512kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████▍                        | 522kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████▌                        | 532kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████▊                        | 542kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████▉                        | 552kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████                        | 563kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████▏                       | 573kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████▎                       | 583kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████▍                       | 593kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████▌                       | 604kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████▊                       | 614kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████▉                       | 624kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████                       | 634kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████▏                      | 645kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████▎                      | 655kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████▍                      | 665kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████▋                      | 675kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████▊                      | 686kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████▉                      | 696kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████                      | 706kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████▏                     | 716kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████▎                     | 727kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████▍                     | 737kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████▋                     | 747kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████▊                     | 757kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████▉                     | 768kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████                     | 778kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████▏                    | 788kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████▎                    | 798kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████▌                    | 808kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████▋                    | 819kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████▊                    | 829kB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████▉                    | 839kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████                    | 849kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████▏                   | 860kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████▎                   | 870kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████▌                   | 880kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████▋                   | 890kB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 901kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████                   | 911kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████                   | 921kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████▏                  | 931kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████▍                  | 942kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████▌                  | 952kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████▋                  | 962kB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████▊                  | 972kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 983kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 993kB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████▏                 | 1.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████▍                 | 1.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████▌                 | 1.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████▋                 | 1.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████▉                 | 1.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 1.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 1.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████▏                | 1.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████▍                | 1.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████▌                | 1.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████▋                | 1.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████▉                | 1.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████                | 1.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████                | 1.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████▎               | 1.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████▍               | 1.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████▌               | 1.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████▊               | 1.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████▉               | 1.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████               | 1.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████               | 1.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████▎              | 1.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████▍              | 1.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████▌              | 1.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 1.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████▉              | 1.3MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████              | 1.3MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████▏             | 1.3MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████▎             | 1.3MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████▍             | 1.3MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████▋             | 1.3MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████▊             | 1.3MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████▉             | 1.3MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 1.3MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████▏            | 1.4MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████▎            | 1.4MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████▍            | 1.4MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████▋            | 1.4MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████▊            | 1.4MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████▉            | 1.4MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 1.4MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████▏           | 1.4MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████▎           | 1.4MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████▍           | 1.4MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████▋           | 1.5MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████▊           | 1.5MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████▉           | 1.5MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████           | 1.5MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████▏          | 1.5MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████▎          | 1.5MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████▌          | 1.5MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████▋          | 1.5MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████▊          | 1.5MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████          | 1.5MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████          | 1.6MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████▏         | 1.6MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████▎         | 1.6MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████▌         | 1.6MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████▋         | 1.6MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████▊         | 1.6MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████         | 1.6MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████         | 1.6MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████▏        | 1.6MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████▍        | 1.6MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████▌        | 1.7MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████▋        | 1.7MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████▊        | 1.7MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 1.7MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 1.7MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████▏       | 1.7MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████▍       | 1.7MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████▌       | 1.7MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████▋       | 1.7MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████▉       | 1.8MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 1.8MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 1.8MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▎      | 1.8MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▍      | 1.8MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▌      | 1.8MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▋      | 1.8MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▉      | 1.8MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████      | 1.8MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████      | 1.8MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▎     | 1.9MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▍     | 1.9MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▌     | 1.9MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▊     | 1.9MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▉     | 1.9MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████     | 1.9MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████     | 1.9MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▎    | 1.9MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▍    | 1.9MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▌    | 1.9MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▊    | 2.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▉    | 2.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████    | 2.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 2.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▎   | 2.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▍   | 2.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▋   | 2.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▊   | 2.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▉   | 2.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████   | 2.0MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▏  | 2.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▎  | 2.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▍  | 2.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▋  | 2.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▊  | 2.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▉  | 2.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 2.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▏ | 2.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▎ | 2.1MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▍ | 2.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▋ | 2.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▊ | 2.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▉ | 2.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████ | 2.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▏| 2.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▎| 2.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▌| 2.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▋| 2.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▊| 2.2MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 2.3MB 30.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 2.3MB 30.5MB/s \n","\u001b[?25hRequirement already satisfied: keras>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from mtcnn) (2.4.3)\n","Requirement already satisfied: opencv-python>=4.1.0 in /usr/local/lib/python3.7/dist-packages (from mtcnn) (4.1.2.30)\n","Requirement already satisfied: numpy>=1.9.1 in /usr/local/lib/python3.7/dist-packages (from keras>=2.0.0->mtcnn) (1.19.5)\n","Requirement already satisfied: scipy>=0.14 in /usr/local/lib/python3.7/dist-packages (from keras>=2.0.0->mtcnn) (1.4.1)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.7/dist-packages (from keras>=2.0.0->mtcnn) (3.1.0)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.7/dist-packages (from keras>=2.0.0->mtcnn) (3.13)\n","Requirement already satisfied: cached-property; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from h5py->keras>=2.0.0->mtcnn) (1.5.2)\n","Installing collected packages: mtcnn\n","Successfully installed mtcnn-0.1.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2hgZefXv04eH"},"source":["from mtcnn.mtcnn import MTCNN\n","detector = MTCNN()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IjehUNHN05e0"},"source":["labels={0:'MASK',1:'NO MASK', 2:'NO FACE FOUND'}\n","color={0:(0,255,0),1:(255,0, 0)}"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wa2NdWjg05h_"},"source":["test_images = ['/content/loki_with_out_mask.jpeg','/content/with_mask and without _mask.jpeg','/content/WithOut_mask.jpeg']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Oeb--x_X05lZ"},"source":["def show_images(images):\n","    n: int = len(images)\n","    f = plt.figure(figsize=(128, 128))\n","    for i in range(n):\n","        # Debug, plot figure\n","        f.add_subplot(1, n, i + 1)\n","        plt.imshow(images[i])\n","\n","    plt.show(block=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":239,"output_embedded_package_id":"1aZ-Gn7plyMKctSTqdrvdK6YE5DvP8mVB"},"id":"XkbwhizI05t7","executionInfo":{"status":"ok","timestamp":1625731319560,"user_tz":-330,"elapsed":9776,"user":{"displayName":"lokeshkumar kolluri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoVq5K3CqDj4CUq-vmvQAmYVPY26bmQLvTQ3Ft=s64","userId":"01372685654433503723"}},"outputId":"254b6c4f-ec89-47bc-8a5d-9665981df710"},"source":["output_images = []\n","for file in test_images:\n","  img = cv2.imread(file)\n","  img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n","  faces = detector.detect_faces(img_rgb)\n","\n","  index = 1\n","  try:\n","      for face in faces:\n","          (x,y,w,h) = face['box']\n","          face_img = img_rgb[y:y+h, x:x+w]\n","          # print(face_img.shape)\n","          img_resized = cv2.resize(face_img, (64,64))\n","          img_resized = np.reshape(img_resized, (1,64,64,3))\n","\n","          result = int(model.predict(img_resized)[0][0])\n","      \n","          cv2.rectangle(img,(x,y),(x+w,y+h),color[result],2)\n","          cv2.rectangle(img,(x,y-40),(x+w,y),color[result],-1)\n","          cv2.putText(img, labels[result], (x, y-10),cv2.FONT_HERSHEY_SIMPLEX,0.8,(255,255,255),2)\n","      output_images.append(img)\n","  except Exception as e:\n","      print(e)\n","  index+=1\n","\n","show_images(output_images)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]}]}